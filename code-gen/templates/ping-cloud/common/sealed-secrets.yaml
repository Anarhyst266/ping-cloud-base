# This shows how to create an example sealed secret. Sealed secrets are encrypted, so they are safe to check into a
# source repo. They are encrypted by the private key of the Bitnami sealed secret controller running in the cluster.
#
# For more information on sealed secrets, refer to:
# https://github.com/bitnami-labs/sealed-secrets
#
# To create a sealed secret, install the kubeseal tool using the instructions in the above URL. Then, create the
# encrypted password as the data field in a sealed secret object as shown below.
#
# The ping.yaml file has the following unencrypted secrets (namespace: ping-cloud):
#     devops-secret - the user/secret required to run the Ping Docker images
#     passwords - the PD app's root/admin user passwords
#     tls-secret - the TLS cert/key used for domain verification and encryption of ingress traffic to the backend apps.
#
# The tools.yaml file has the following unencrypted secret (namespace: elastic-stack-logging):
#     tls-secret-logging - the TLS cert/key used for domain verification and encryption of ingress traffic to kibana
#
# To seal these secrets, run the following commands:
#     kubeseal --fetch-cert --controller-namespace sealed-secret > cert.pem
#
# Then, for each of the above secrets, run the following commands (shown for devop-secret):
#     kubectl get secret devops-secret -n ping-cloud -o yaml | kubeseal --cert cert.pem -o yaml
#
# Add the generate manifest file to this file, separating each sealed secret with the --- delimiter. When the change
# is pushed up, flux will automatically deploy the sealed secrets and their corresponding secret objects into the
# Kubernetes cluster.

apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-sealed-secret
  namespace: ping-cloud
spec:
  encryptedData:
    foo: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEq

---