# NOTES:
#
# To generate a CSR (to be submitted to a CA) for ping.aws.com, follow these steps:
#
# 1. Generate the RSA private key:
#      openssl genrsa -out ping-aws.rsa 4096
#
# 2. Create a CSR to submit to CA:
#      openssl req -new -key ping-aws.rsa -out ping-aws.csr \
#        -reqexts SAN -extensions SAN -subj '/CN=ping-aws.com' \
#        -config <(cat /etc/ssl/openssl.cnf; printf "[SAN]\nsubjectAltName=DNS:*.ping-aws.com")
#
# 3. Obtain the CA-signed certificate and put it in ping-aws.crt
#
# ---
#
# For test purposes, create a key and a self-signed certificate in one step:
#
# 1. For test purposes, create a key and a self-signed certificate in one step:
#      openssl req -x509 -nodes -newkey rsa:2048 -days 3650 -sha256 \
#        -keyout ping-aws.key -out ping-aws.crt -subj '/CN=ping-aws.com' \
#        -reqexts SAN -extensions SAN \
#        -config <(cat /etc/ssl/openssl.cnf; printf "[SAN]\nsubjectAltName=DNS:*.ping-aws.com")
#
#    On Open SSL 1.1.1 or later, after creating the key, run this:
#      openssl req -sha256 -new -x509 -days 3650 \
#        -key ping-aws.rsa -out ping-aws.crt \
#        -subj /CN=ping-aws.com \
#        -addext "subjectAltName = DNS:*.ping-aws.com"
#
# ---
#
# To transform the RSA key (ping-aws.rsa) to PKCS#8 (ping-aws.key) format, run:
#   openssl pkcs8 -topk8 -inform PEM -outform PEM \
#     -in ping-aws.rsa -out ping-aws.key -nocrypt
#
# Copy the contents of ping-aws.crt and ping-aws.key into tls.crt and tls.key
# in the tls secret object below.

apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: tls-secret
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN6akNDQWJhZ0F3SUJBZ0lKQU8yeVI3Znd0c3ZnTUEwR0NTcUdTSWIzRFFFQkN3VUFNQmN4RlRBVEJnTlYKQkFNTURIQnBibWN0WVhkekxtTnZiVEFlRncweE9UQTVNalV4T0RBNE5EVmFGdzB5T1RBNU1qSXhPREE0TkRWYQpNQmN4RlRBVEJnTlZCQU1NREhCcGJtY3RZWGR6TG1OdmJUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFPSlBPUTM2SHlldkFaWFFZZTloNTB2UzJRcks3VXl4WVRTK05UbmtRbk9QOVFDMjVkWjMKVjBZSFRsOXJhZWI0aU9JV3F4MDBkcFJ3SjdKc043a3c5MHNGakdhUWppTmZSbEltdlBqUEpoV0lvZk85a3dUcApyZDdraTVKOHUzWW45aEFFbURHSlZDSDcvWjdRL0lja0dZbDlZdzY4QjRrdnRCZXp6VnVzUE5FZldUNGlmNUViCiszVHY5cEhZQVNBK0IwOHBYOGFmVDZoQkJuRmRkazF4a0JCN1dtR2lBVFJmZ3hVR3ZjSzY5RW5MaDc4Z1lxQzkKU2wyMFpXU3RuNzZZaFp0am4xYzB0M2ZJa0xaZzFpZnBmQ2RYZ3VhSDRocUliL2cyN2trRmsvNFVDWUZWb1VudwpqN0V3Ky9jWmJuWjV6SmJhT0FFUlFWeS9sYVdCcG93R0J0Y0NBd0VBQWFNZE1Cc3dHUVlEVlIwUkJCSXdFSUlPCktpNXdhVzVuTFdGM2N5NWpiMjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFlclhxUHl2NnNGMGNpU29VWWgKbkFwZDVuQmFVOG1Ndys1QlFJS2VhRlpVTFdjczFyc3JDY1VEbm1XNHZ2cXBJQWgwQ2xvVVo2NWY4dG5qelhrbApHM21uSWRiaEJ4d3ZzN2pld3oxWjRUUjByUGZOVGEvVTZxTWRyQ0JsM3FnVERkUlc4L0t0MUREMkYwRHVNK0h3CjR4dTl0OUtIbTNiRWxIZTZvVHYwaXAzd0dKNWZtck1Od2VZMzZjMk84V2J0Wk0wSWFhaEp1bXEwajhIanQvL1cKWS9OYk5nK2xkRVZVYnZPRnpyWXNrT0hmRXI2Mlp0Y3p0U2RHMG9zMkhTYno3ZUF6bW8xYjA1Vk9RREsrVjlNcgpERjc0dUV2ZFVxZ1lCNzNVZGx3UkhkMmxWckIwVFI1RmJaempKc29hTkZxVkp6NHpQVEJwOXJzUFJ5UHFvV2ljCmFTUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRGlUemtOK2g4bnJ3R1YKMEdIdlllZEwwdGtLeXUxTXNXRTB2alU1NUVKemovVUF0dVhXZDFkR0IwNWZhMm5tK0lqaUZxc2ROSGFVY0NleQpiRGU1TVBkTEJZeG1rSTRqWDBaU0pyejR6eVlWaUtIenZaTUU2YTNlNUl1U2ZMdDJKL1lRQkpneGlWUWgrLzJlCjBQeUhKQm1KZldNT3ZBZUpMN1FYczgxYnJEelJIMWsrSW4rUkcvdDA3L2FSMkFFZ1BnZFBLVi9HbjArb1FRWngKWFhaTmNaQVFlMXBob2dFMFg0TVZCcjNDdXZSSnk0ZS9JR0tndlVwZHRHVmtyWisrbUlXYlk1OVhOTGQzeUpDMgpZTlluNlh3blY0TG1oK0lhaUcvNE51NUpCWlArRkFtQlZhRko4SSt4TVB2M0dXNTJlY3lXMmpnQkVVRmN2NVdsCmdhYU1CZ2JYQWdNQkFBRUNnZ0VBUHFhTjlmZWJibUg5ZjFyNzhjaFp2dHoxSnc2OG1QRzJKbUxOMjJQOG5YOXAKNVRPODl4MTh0SzlMSEJGaGRRYXk1bHcrTE15Y1UwV2xSN2k3eUhIczFBRUtPRTZtZXRaaVlsWEZGT0JMKzhRaQppWmFldjhwdFR2cFlSVXB3bnlvNjdYNUlIOWFUeXdDMjJxT2lkVXNpSXJUcW1tYWxjMjRZWGtOeGc0SndKN2dQCm84MXhsSXdXTEQ2RUVNNEEvZ1lhY1JLSkM3eGFNYTdhSkowMjdhZU9lOERrL0U0OFp2cnBvK0RjdEVnUnRYb1YKZ0VTeFJLSDRaMGw2bVp5am54RnROSDluYnRVc0F3M080SFJweFR1L3dOQmU1amVOcGROci96YnhYQ0tJRUlWQwpZNDFOTkN2anhiQUlqcHdNeHRTRHFrUXUwZnNKeVpiZGVITzdTVEZqeVFLQmdRRDVSUmF3ZUI0SFRpL1VXQUNtCmtMdjFlQSt2cENlaFA1K1FMOTFBNnZZQlVWbnNkNy9McmtrNnJsV29pRmE5N2I3NnNhbkU1RFFTUlByWW9TK3UKK0YvSG1rTm1nc1htS3lnTit3K0puQWt0OWNhSndWR1g4ellCK1loOTdSeDRNaDEvVlNGV3lFUWpCaUFWNVNWdQpKVjhvWVdQaWF2aWNCaDZZSWtTLzVwV0FuUUtCZ1FEb2EyK01UT2hwV0d3c2tHdURUMnNsOVhPWW1Gb2JnZmpLCnZaOWV3ZWNQaWhseVd3QmFPSjQyQk1LbjZqaU9SYVVqWUh3T0d0dmNreDRnNEZnQ1hCSU1ZeUJPd095VlUvNjUKbHBJYWgrNmduZlZpaWluamhuck5IY2Z0ZzhYeGZteGY2bDdyMGlnSHJJV29FMFZhMGlNV0gzc1dsUkYza2dYMgpKSWNqVmNBSkF3S0JnUUNkd1ArdkJ4WGFBYjE3WVlabjQ4bFFmSDlRNVU2L1dnaWRzKzBPbktTOENNUWtSMVQyCmpvS0J4THNwUWIvRHk2YkYrWkk3clVEWEh4aXg2TERJeHgrMnJ3Wmc1ZnBneElkQThkYlBmQlRESlh4VXlpZmQKUm1xenJUeVlsV3NqRm5SY2xYL1g4RDVPL0IxcVBlOEdXbGh5c2RBSkJ6SDNiRmdJYUFlaWUwZTZjUUtCZ0JPMwp5YWJsZjNJd2hqemhvNzFvSjNiNDgrMm1QejdHTUExRE9Sb1k2VGx3UmVobHdBbm5jOFN4Y3JJOE5NQWRPSDFmCjJpWjRNTjd0dkVpZHY5bXpaZlNYRkU2YUgzZ3J3QmlPcGFhS2tid2Vxb3JKbmZRbm5KTjZTMVBqTWcvaTRkN2gKUzF4R1lBOEdtL0ErY2t2YU9BL1FhK2ptakt6UVBxRTdTQnUvVXFOeEFvR0FYSjNSY1ZiTVpKNVIwMUNlczJocApaVGVGcForazB1a2hNaHNrWmZUU2hGM2xoMXgvRmRLajJtaEtFaWxtTEtlYy80WWMzN1JIdkpTTjZQa2RvYmhVCngvaWIxbUx0MFIwM3plSDkxK3FBK3c1MzRnQllCYVdDaVZMWnN6S2g1NzFoejR2TmE1VmNRNGdrNDN1cGs4WUQKYlViZFNxR2RVRzFyd2VZSG51elRmZEE9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: devops-secret

---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ssh-id-key-secret