# This defines the deployment (as a stateful set) of the pingdirectory servers

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ds
spec:
  serviceName: pingdirectory
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      annotations:
        lastUpdateReason: "NA"
    spec:
      terminationGracePeriodSeconds: 300
      initContainers:
      - name: ssh-init
        image: busybox
        command:
        - /init-ssh-config.sh
        volumeMounts:
        - name: ssh-dir
          mountPath: /.ssh
        - name: ssh-id-key-secret
          mountPath: /id_rsa
          subPath: id_rsa
          readOnly: true
        - name: known-hosts-config
          mountPath: /known_hosts
          subPath: known_hosts
          readOnly: true
        - name: ssh-init-script
          mountPath: /init-ssh-config.sh
          subPath: init-ssh-config.sh
          readOnly: true
      containers:
      - name: ds
        # FIXME: switch to stable image before GA
        image: pingidentity/pingdirectory:edge
        imagePullPolicy: Always
        ports:
        - containerPort: 389
          name: ldap
        - containerPort: 636
          name: ldaps
        resources:
          requests:
            memory: "5Gi"
            cpu: "2"
          limits:
            memory: "5Gi"
            cpu: "2"
        env:
        - name: K8S_STATEFUL_SET_NAME
          value: $(K8S_STATEFUL_SET_NAME)
        - name: K8S_STATEFUL_SET_SERVICE_NAME
          value: $(K8S_STATEFUL_SET_SERVICE_NAME)
        - name: MAX_HEAP_SIZE
          value: 4g
        - name: UNBOUNDID_JAVA_ARGS
          value: "-client -Xmx4g -Xms4g"
        - name: ROOT_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingdirectory-passwords
              key: root-user-password
        envFrom:
        - configMapRef:
            name: pingdirectory-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        volumeMounts:
        # FIXME: fix home directory when containers run as non-root user
        - name: ssh-dir
          mountPath: /root/.ssh
          readOnly: true
        - name: out-dir
          mountPath: /opt/out
        - name: pingdirectory-passwords
          mountPath: /usr/local/secrets
          readOnly: true
        # FIXME: uncomment when image is fixed
#        - name: pingdirectory-license
#          mountPath: /opt/in/instance/PingDirectory.lic
#          subPath: PingDirectory.lic
#          readOnly: true
        readinessProbe:
          exec:
            command: [ liveness.sh ]
          periodSeconds: 30
          failureThreshold: 120
        livenessProbe:
          exec:
            command: [ liveness.sh ]
          initialDelaySeconds: 600
          periodSeconds: 30
          failureThreshold: 10
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/staging/hooks/90-shutdown-sequence.sh
      volumes:
      - name: ssh-dir
        emptyDir: {}
      - name: ssh-init-script
        configMap:
          name: ssh-init-script
          defaultMode: 0500
      - name: ssh-id-key-secret
        secret:
          secretName: ssh-id-key-secret
          optional: true
          defaultMode: 0400
      - name: known-hosts-config
        configMap:
          name: known-hosts-config
          optional: true
          defaultMode: 0400
      - name: out-dir
        persistentVolumeClaim:
          claimName: out-dir
      - name: pingdirectory-license
        secret:
          secretName: pingdirectory-license
          optional: true
          defaultMode: 0400
      - name: pingdirectory-passwords
        secret:
          secretName: pingdirectory-passwords
          optional: true
          defaultMode: 0400
  volumeClaimTemplates:
  - metadata:
      name: out-dir
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: pingdirectory-gp2
      resources:
        requests:
          storage: 5Gi